# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrant versions
#################################
Vagrant.require_version ">= 1.6.2"
VAGRANT_API_VERSION = "2"

# Required Configuration
#################################
require "yaml"
if ! File.exists?(File.join(File.dirname(__FILE__), "vagrantfile-local-config.yml")) 
   puts 'vagrantfile-local-config.yml could not be found!' 
   exit 1 
end 
_config = YAML.load(File.open(File.join(File.dirname(__FILE__), "vagrantfile-local-config.yml"), File::RDONLY).read)
CONF = _config

puts CONF["ram"]
puts CONF["cpus"]
# ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox' 
 
if ! File.exists?('./Provisioning/Scripts/Provision.ps1') 
   puts 'Provision.ps1 could not be found!' 
   exit 1 
end 

# Configure 
#################################
Vagrant.configure("VAGRANT_API_VERSION") do |config|
    config.vm.define "vagrant-windows-7"
    config.vm.box = "windows_7"
    config.vm.communicator = "winrm"
    config.vm.guest = :windows
    config.windows.halt_timeout = 15

    # SECURITY
    # Admin user name and password
    config.winrm.username = "vagrant"
    config.winrm.password = "vagrant"

    # NETWORK
    config.vm.network :forwarded_port, guest: 22, host: 2222, id: "ssh", auto_correct: true
    config.vm.network :forwarded_port, guest: 3389, host: 3389, id: "rdp", auto_correct: true

    # PROVIDERS
    # VirtualBox
    config.vm.provider :virtualbox do |v, override|
        #v.gui = true
        v.customize ["modifyvm", :id, "--memory", 2048]
        v.customize ["modifyvm", :id, "--cpus", 2]
        v.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end

    # VMWare Fusion
    config.vm.provider :vmware_fusion do |v, override|
        #v.gui = true
        v.vmx["memsize"] = "2048"
        v.vmx["numvcpus"] = "2"
        v.vmx["ethernet0.virtualDev"] = "vmxnet3"
        v.vmx["RemoteDisplay.vnc.enabled"] = "false"
        v.vmx["RemoteDisplay.vnc.port"] = "5900"
        v.vmx["scsi0.virtualDev"] = "lsisas1068"
    end

    # VMWare Workstation
    config.vm.provider :vmware_workstation do |v, override|
        #v.gui = true
        v.vmx["memsize"] = "2048"
        v.vmx["numvcpus"] = "2"
        v.vmx["ethernet0.virtualDev"] = "vmxnet3"
        v.vmx["RemoteDisplay.vnc.enabled"] = "false"
        v.vmx["RemoteDisplay.vnc.port"] = "5900"
        v.vmx["scsi0.virtualDev"] = "lsisas1068"
    end
end
